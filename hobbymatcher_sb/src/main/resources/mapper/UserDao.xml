<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hobbymatcher.dao.UserDao">
	<select id="listUser" resultType="com.hobbymatcher.entity.User">
		select *
		from user
		order by nick_name desc
	</select>

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into user (first_name, last_name, photo_id, nick_name, email, password, date_of_birth, gender)
        values (#{firstName}, #{lastName}, #{photoId}, #{nickName}, #{email}, #{password}, #{dateOfBirth}, #{gender})
    </insert>

	<select id="findUserById" parameterType="map"
		resultType="com.hobbymatcher.entity.User">
		select *
		from user
		where id = #{id}
	</select>

    <select id="findUserByEmail" parameterType="map" resultType="com.hobbymatcher.entity.User">
        select *
        from user
        where email = #{email}
    </select>

    <select id="findUserByEmailAndPwd" parameterType="map" resultType="com.hobbymatcher.entity.User">
        select *
        from user
        where email = #{email}
          and password = #{password}
    </select>


    <update id="updateUser" parameterType="com.hobbymatcher.entity.User">
        update user
        <set>
            <if test="firstName != null">first_name=#{firstName},</if>
            <if test="lastName != null">last_name=#{lastName},</if>
            <if test="photoId != null">photo_id=#{photoId},</if>
            <if test="nickName != null">nick_name=#{nickName},</if>
            <if test="dateOfBirth != null">date_of_birth=#{dateOfBirth},</if>
            <if test="gender != null">gender=#{gender}</if>
        </set>
        where id = #{id}
    </update>
    
    <update id="updateEmail">
        update user 
        set email=#{newEmail}
        where id = #{id}
    </update>
    
    <update id="updatePassword">
        update user 
        set password=#{newPassword}
        where id = #{id}
    </update>
    
    <delete id="deleteUser">
        delete
        from user
        where id = #{id}
    </delete>
</mapper>